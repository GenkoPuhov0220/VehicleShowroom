@using static VehicleShowroom.Common.EntityValidationConstants
@using Microsoft.AspNetCore.Identity
@using VehicleShowroom.Data.Models
@inject SignInManager<ApplicationUser> SingInManager
@inject UserManager<ApplicationUser> UserManager
@model PaginatedList<Vehicle>
@{
    ViewData["Title"] = "Vehicle List";
}
<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
    <h1>All vehicle in showroom</h1>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create" class="btn btn-primary">Add new Vehicle</a>
        
    }
</div>
<div class="container my-4">
    <div class="text-center mb-3">
        <form class="d-flex justify-content-center align-items-center" asp-action="Index" asp-controller="Vehicle">
            <input name="searchString"
                   class="form-control me-2 w-50"
                   type="search"
                   placeholder="Search vehicles by make..."
                   aria-label="Search" />
            <button class="btn btn-dark px-4" type="submit">
                <i class="fas fa-search me-1"></i> Search
            </button>
        </form>
    </div>
    <div class="text-center">
        <a asp-action="Index" class="btn btn-outline-dark">
            <i class="fas fa-arrow-left me-1"></i> Back to Full Vehicle List
        </a>
    </div>
</div>
<div class="container">
    <div class="row">
        @foreach (var vehicle in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card" style="width: 18rem;">
                    <img src="@vehicle.ImageUrl" alt="Car image" class="img-thumbnail mt-2" style="width: auto;" />
                    
                    <div class="card-body">
                        <h5 class="card-title">@vehicle.Make @vehicle.Model</h5>
                        <p class="card-text">
                            <strong>Type:</strong> @vehicle.VehicleType<br />
                            <strong>Year:</strong> @vehicle.Year<br />
                            <strong>Price:</strong> @vehicle.Price<br />
                            <strong>Color:</strong> @vehicle.Color<br />
                            <strong>Fuel Type:</strong> @vehicle.FuelType<br />
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="buttons text-center">
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" 
   class="btn btn-outline-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" 
   class="btn btn-outline-primary @nextDisabled">
    Next
</a>
</div>
